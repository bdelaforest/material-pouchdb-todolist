!function(){"use strict";function AppConfig($mdThemingProvider,$mdIconProvider,cfg){$mdIconProvider.icon("menu","assets/svg/menu.svg",24),$mdThemingProvider.theme("default").primaryPalette("indigo").accentPalette("blue")}function nl2br($sce){return function(input){return void 0!==input?$sce.trustAsHtml(input.replace(/\n/g,"<br>")):void 0}}angular.module("app",["ngMaterial","pouchDB"]).filter("nl2br",nl2br).config(AppConfig).constant("cfg",{storeName:"task",pouchDBName:"tasks",pouchDBRemote:"https://bdelaforest.iriscouch.com/"}),AppConfig.$inject=["$mdThemingProvider","$mdIconProvider","cfg"],nl2br.$inject=["$sce"]}();
!function(){"use strict";function DialogController($mdDialog){function cancel(){$mdDialog.cancel()}function success(task){$mdDialog.hide(task)}var vm=this;vm.task={},vm.cancel=cancel,vm.success=success}angular.module("app").controller("DialogController",DialogController),DialogController.$inject=["$mdDialog"]}();
!function(){"use strict";function PouchDBService(cfg){var db=new PouchDB(cfg.pouchDBName,{auto_compaction:!0});return db.sync(cfg.pouchDBRemote+cfg.pouchDBName,{live:!0,retry:!0}),db}angular.module("pouchDB",[]).factory("pouchDB",PouchDBService),PouchDBService.$inject=["cfg"]}();
!function(){"use strict";function TaskService($q,cfg,pouchDB){function save(task){function success(response){deferred.resolve(response)}function error(err){console.log("After insert error",err)}var deferred=$q.defer();if(!task._id){var date=(new Date).toISOString();task._id=date,task.createdAt=date,task.done=!1}return pouchDB.put(task).then(success)["catch"](error),deferred.promise}function getOne(id){return pouchDB.get(id)}function getAll(filter){function success(response){var tasks=[];for(var i in response.rows)tasks.push(response.rows[i].doc);deferred.resolve(tasks)}function error(err){console.log("Error",err)}var deferred=$q.defer(),status="",options={include_docs:!0};return"undefined"==typeof filter||"all"===filter?pouchDB.allDocs(options).then(success)["catch"](error):("todo"===filter?status=!1:"done"===filter&&(status=!0),pouchDB.query(function(doc,emit){doc.done===status&&emit(doc)},options).then(success)["catch"](error)),deferred.promise}function clearTasks(filter){var deferred=$q.defer();return getAll(filter).then(function(tasks){_.each(tasks,function(task,i){tasks[i]._deleted=!0}),pouchDB.bulkDocs(tasks).then(function(result){deferred.resolve(result)})}),deferred.promise}var service={save:save,getOne:getOne,getAll:getAll,clearTasks:clearTasks};return service}angular.module("app").factory("taskService",TaskService),TaskService.$inject=["$q","cfg","pouchDB"]}();
!function(){"use strict";function TasksController($q,$filter,$timeout,$mdDialog,$mdSidenav,taskService,pouchDB){function loadTasks(){taskService.getAll(vm.filter).then(function(tasks){vm.tasks=tasks;var idx=_.findIndex(vm.tasks,function(task){return task._id==vm.selected._id});vm.selected=idx>=0?vm.tasks[idx]:{}})}function selectTask(task){var pending=$mdSidenav("left").close()||$q.when(!0);pending.then(function(){vm.selected=task})}function clearTasks(){taskService.clearTasks("done").then(function(){loadTasks()})}function showForm(ev){$mdDialog.show({controller:"DialogController",controllerAs:"vm",templateUrl:"app/newTaskForm.tpl.html",targetEvent:ev}).then(function(task){save(task)})}function save(task,timeout){function saveFunc(){taskService.save(task).then(function(){loadTasks()})}"undefined"!=typeof timeout?(vm.selected=task,$timeout(function(){saveFunc()},300)):saveFunc()}function toggleSidebar(){var pending=$q.when(!0);pending.then(function(){$mdSidenav("left").toggle()})}function filterTasks(filter){vm.filter=filter,loadTasks()}function isElem(elemName,event){return elemName==event.target.localName}function confirm(ev,cb){var confirm=$mdDialog.confirm().title("Are you sure ?").content("Do you really want to clear all the tasks marked as DONE ?").ariaLabel("Confirm choice").ok("YES").cancel("NO").targetEvent(ev);$mdDialog.show(confirm).then(function(){cb()},function(){console.log("Action aborted")})}var vm=this;vm.tasks=[],vm.filteredTasks=[],vm.filter="all",vm.selectTask=selectTask,vm.clearTasks=clearTasks,vm.showForm=showForm,vm.save=save,vm.toggleSidebar=toggleSidebar,vm.filterTasks=filterTasks,vm.isElem=isElem,vm.confirm=confirm,vm.selected={},vm.debug=function(arg){console.log("debug",arg)},loadTasks()}angular.module("app").controller("TasksController",TasksController),TasksController.$inject=["$q","$filter","$timeout","$mdDialog","$mdSidenav","taskService","pouchDB"]}();